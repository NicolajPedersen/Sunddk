@model Sunddk.Models.MealViewModel

@{
    ViewBag.Title = "CreateMeal";

    List<SelectListItem> categories = new List<SelectListItem>();
    categories.Add(new SelectListItem { Text = "--Vælg--" });
    categories.Add(new SelectListItem { Text = "Morgenmad" });
    categories.Add(new SelectListItem { Text = "Middagsmad" });
    categories.Add(new SelectListItem { Text = "Aftensmad" });
    categories.Add(new SelectListItem { Text = "Mellemmåltid" });
}

<h2>CreateMeal</h2>

@using (Html.BeginForm("CreateMeal", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" })) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.MealPlanId);
    <div class="form-horizontal">
        <h4>Meal</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Calories, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Calories, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Calories, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Type, categories)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("Done", "Admin", FormMethod.Get, new { @class = "form-horizontal", role = "form" })) {
    @Html.HiddenFor(model => model.MealPlanId);
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <div>
                <input type="submit" value="Done" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
